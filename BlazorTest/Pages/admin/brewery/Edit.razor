@page "/admin/brewery/edit/{Id:int}"

@using BlazorTest.ViewModels
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using System.Globalization
@using System.ComponentModel.DataAnnotations

@inject IBeertastingRepository _db
@inject NavigationManager _nav

<AdminGate />

<MudText Typo="Typo.h3" Class="pa-4">Brewery</MudText>

@if (editBrewery is null)
{
	<p><em>Loading...</em></p>
}
else
{
	<EditForm Model="@editBrewery" OnValidSubmit="SaveEditBrewery">
		<DataAnnotationsValidator />
		<MudCard>
			<MudCardContent>
				<MudText Typo="Typo.h4" Class="pa-4">Edit brewery</MudText>
				<MudGrid>
					<MudItem xs="12" sm="4">
						<MudTextField Label="Name" @bind-Value="editBrewery.Name" For="@(() => editBrewery.Name)" Variant="Variant.Outlined" />
					</MudItem>
					<MudItem xs="12" sm="4">
						<MudTextField Label="Country" @bind-Value="editBrewery.Country" For="@(() => editBrewery.Country)" Variant="Variant.Outlined" />
					</MudItem>
					<MudItem xs="12" sm="4">
						<MudTextField Label="Website" @bind-Value="editBrewery.Website" For="@(() => editBrewery.Website)" Variant="Variant.Outlined" />
					</MudItem>					
				</MudGrid>
			</MudCardContent>
			<MudCardActions>
				<MudGrid>
					<MudItem xs="12" md="12">
						<MudContainer Class="d-flex flex-row-reverse py-2 px-1">
							<MudButton ButtonType="ButtonType.Submit" Class="pa-2 mx-2" Variant="Variant.Outlined" Color="Color.Success" Size="Size.Small">SAVE</MudButton>
							<MudButton ButtonType="ButtonType.Button" Class="pa-2 mx-2" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small" OnClick="@(() => Cancel())">CANCEL</MudButton>
						</MudContainer>
					</MudItem>
				</MudGrid>
			</MudCardActions>
		</MudCard>
	</EditForm>
}
@code {
	[Parameter]
	public int Id { get; set; }

	private BreweryViewModel? editBrewery;
	public CultureInfo _nb = CultureInfo.GetCultureInfo("nb-NO");

	
	protected override async Task OnInitializedAsync()
	{
		var b = await _db.GetBrewery(Id);
		editBrewery = new BreweryViewModel(b);
	}

	private void Cancel()
	{
		_nav.NavigateTo($"/admin/brewery/");
	}

	private async Task SaveEditBrewery()
	{
		if(editBrewery is not null)
			await _db.UpdateBrewery(editBrewery.ToBreweryModel());
		
		_nav.NavigateTo($"/admin/brewery/");
	}
}
