@page "/admin/taster/edit/{Id:int}"

@using BlazorTest.ViewModels
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using System.Globalization
@using System.ComponentModel.DataAnnotations

@inject IBeertastingRepository _db
@inject NavigationManager _nav

<AdminGate />

<MudText Typo="Typo.h3" Class="pa-4">Taster</MudText>

@if (editTaster is null)
{
	<p><em>Loading...</em></p>
}
else
{
	<EditForm Model="@editTaster" OnValidSubmit="SaveEditTaster">
		<DataAnnotationsValidator />
		<MudCard>
			<MudCardContent>
				<MudText Typo="Typo.h4" Class="pa-4">Edit taster</MudText>
				<MudGrid>
					<MudItem xs="12" sm="4">
						<MudTextField Label="Name" @bind-Value="editTaster.DisplayName" For="@(() => editTaster.DisplayName)" Variant="Variant.Outlined" />
					</MudItem>
					<MudItem xs="12" sm="4">
						<MudTextField Label="Country" @bind-Value="editTaster.EmailAddress" For="@(() => editTaster.EmailAddress)" Variant="Variant.Outlined" />
					</MudItem>
					<MudItem xs="12" sm="4">
						<MudCheckBox Label="Is administrator" @bind-Checked="editTaster.IsAdmin" For="@(() => editTaster.IsAdmin)" Variant="Variant.Outlined" />
					</MudItem>				
				</MudGrid>
			</MudCardContent>
			<MudCardActions>
				<MudGrid>
					<MudItem xs="12" md="12">
						<MudContainer Class="d-flex flex-row-reverse py-2 px-1">
							<MudButton ButtonType="ButtonType.Submit" Class="pa-2 mx-2" Variant="Variant.Outlined" Color="Color.Success" Size="Size.Small">SAVE</MudButton>
							<MudButton ButtonType="ButtonType.Button" Class="pa-2 mx-2" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small" OnClick="@(() => Cancel())">CANCEL</MudButton>
						</MudContainer>
					</MudItem>
				</MudGrid>
			</MudCardActions>
		</MudCard>
	</EditForm>
}
@code {
	[Parameter]
	public int Id { get; set; }

	private TasterViewModel? editTaster;
	public CultureInfo _nb = CultureInfo.GetCultureInfo("nb-NO");

	
	protected override async Task OnInitializedAsync()
	{
		var b = await _db.GetTaster(Id);
		editTaster = new TasterViewModel(b);
	}

	private void Cancel()
	{
		_nav.NavigateTo($"/admin/taster/");
	}

	private async Task SaveEditTaster()
	{
		if(editTaster is not null)
			await _db.UpdateTaster(editTaster.ToTasterModel());
		
		_nav.NavigateTo($"/admin/taster/");
	}
}
