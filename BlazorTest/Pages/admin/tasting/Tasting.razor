@page "/admin/tasting"
@using BlazorTest.ViewModels
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IBeertastingRepository _db
@inject NavigationManager _nav

<h1>Tastings</h1>

<MudTable Items=@tastings Hover="true">
    <HeaderContent>
        <MudTh><MudButton Color="Color.Primary" Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => OnAddEditPressed(null))">Add</MudButton></MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>TastingDate</MudTh>
        <MudTh>IsActive</MudTh>
        <MudTh>IsBlind</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd><MudButton Color="Color.Primary" Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => OnAddEditPressed(context.TastingId))">Edit</MudButton></MudTd>
        <MudTd DataLabel=Name>@context.Name</MudTd>
        <MudTd DataLabel=Description>@context.Description</MudTd>
        <MudTd DataLabel=TastingDate>@context.TastingDate</MudTd>
        <MudTd DataLabel=IsActive>@context.IsActive</MudTd>
        <MudTd DataLabel=IsBlind>@context.IsBlind</MudTd>
        <MudTd><MudButton Color="Color.Primary" Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => OnShowDetails(context.TastingId))">Show Details</MudButton></MudTd>
    </RowTemplate>
    <ChildRowContent Context="rowContext">
        @if (rowContext.ShowDetails)
        {
            <p>Hei</p>
        }
    </ChildRowContent>

</MudTable>


@code
{
    private List<TastingModel> tastings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        tastings = (await _db.GetTastings()).OrderByDescending(t => t.TastingDate).ToList();
    }

    private void OnAddEditPressed(int? id)
    {
        if (id.HasValue)
            _nav.NavigateTo($"/admin/tasting/edit/{id.Value}");
        else
            _nav.NavigateTo("/admin/tasting/edit");
    }

    private void OnShowDetails(int id)
    {
        var tasting = tastings.Single(t => t.TastingId == id);
        tasting.ShowDetails = !tasting.ShowDetails;
    }
}