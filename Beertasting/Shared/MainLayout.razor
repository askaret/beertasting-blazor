@inherits LayoutComponentBase
@using Microsoft.Identity.Web
@using Microsoft.Graph
@using Beertasting.ViewModels
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using System.Globalization
@using System.ComponentModel.DataAnnotations

@inject ProtectedSessionStorage ProtectedSessionStore
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler
@inject IBeertastingRepository _db
@inject ILogger<MainLayout> _logger

<MudThemeProvider Theme="@_activeTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Beertasting</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Outlined.Palette" Color="Color.Inherit" Edge="Edge.End" OnClick="@(() => ThemeToggle())"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Edge="Edge.End" Link="https://github.com/askaret/beertasting-blazor" Target="_blank"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>    
</MudLayout>

@code {
    bool _drawerOpen = true;
    private MudTheme _activeTheme = bouvetThemeLight;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await SetTheme();
    }
    private async Task SetTheme(string? themeName = null)
    {
        if (ProtectedSessionStore is null)
            return;

        if(string.IsNullOrEmpty(themeName))
        {
            var res = await ProtectedSessionStore.GetAsync<string>("selected-theme");
            themeName = res.Success ? res.Value : "bouveThemeLight";
        }
        
        if(themeName!.Equals("bouvetThemeLight"))
        {
            _activeTheme = bouvetThemeLight;
        }
        else if(themeName.Equals("bouvetThemeDark"))
        {
            _activeTheme = bouvetThemeDark;
        }
        await ProtectedSessionStore.SetAsync("selected-theme", themeName);
        StateHasChanged();
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async void ThemeToggle()
    {
        if (_activeTheme == bouvetThemeDark)
            await SetTheme("bouvetThemeLight");
        else
            await SetTheme("bouvetThemeDark");
    }

    static MudTheme bouvetThemeDark = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = BouvetColors.NerdyOffWhitePaleRgba,
            TextSecondary = BouvetColors.BorisOransjRgba,
            Primary = BouvetColors.ZeroCoolBlå,
            Secondary = BouvetColors.NetworkGreenRgba,
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };

    static MudTheme bouvetThemeLight = new MudTheme()
    {
        Palette = new Palette()
        {
            Background = BouvetColors.NerdyOffWhitePale,
            DrawerBackground = BouvetColors.NerdyOffWhitePale,
            Primary = BouvetColors.CloakBlå,
            Secondary = BouvetColors.BorisOransj,
            //Surface = BouvetColors.CollinsGrå,
            //BackgroundGrey = BouvetColors.HotPink,
            //Black = BouvetColors.Svart,
            //DrawerText = BouvetColors.ColossusRgba,
            //DrawerIcon = BouvetColors.WorpBlåRgba,
            AppbarBackground = BouvetColors.Colossus,
            //AppbarText = BouvetColors.BorisOransjRgba,
            TextPrimary = BouvetColors.ColossusRgba,
            TextSecondary = BouvetColors.Svart,
            ActionDefault = BouvetColors.ColossusRgba,
            //ActionDisabled = "rgba(255,0,0, 1)",
            //ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            //Divider = BouvetColors.HotPinkRgba,
            //DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = BouvetColors.CloakBlå,
            LinesDefault = BouvetColors.ColossusRgba,
            //LinesInputs = BouvetColors.BorisOransjRgba,
            //TextDisabled = BouvetColors.HotPinkRgba,
        }
    };
}
